<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <ext:property-placeholder />
    
    <bean id="bundleListener" class="org.apache.karaf.cellar.hazelcast.HazelcastBundleListener" init-method="init"
          destroy-method="destroy">
        <property name="bundleContext" ref="blueprintBundleContext"/>
    </bean>
    
    <bean id="bundleClassLoader" class="org.apache.karaf.cellar.hazelcast.internal.BundleClassLoader" init-method="init"
          destroy-method="destroy">
        <property name="bundleContext" ref="blueprintBundleContext"/>
        <property name="bundleListener" ref="bundleListener"/>
    </bean>

    <!-- Discovery Task -->
    <bean id="discoveryTask" class="org.apache.karaf.cellar.core.discovery.DiscoveryTask" init-method="init" destroy-method="destroy">
        <property name="discoveryServices" ref="discoveryServices"/>
        <property name="configurationAdmin" ref="configurationAdmin"/>
    </bean>
    
    <bean id="masterCluster" class="org.apache.karaf.cellar.hazelcast.HazelcastCluster" init-method="init" destroy-method="shutdown">
        <property name="name" value="default"/>
        <property name="nodeName" value="${karaf.name}"/>
        <property name="configManager" ref="configManager"/>
    </bean>
    
    <service ref="masterCluster" interface="org.apache.karaf.cellar.core.CellarCluster">
        <service-properties>
            <entry key="name" value="${karaf.name}"/>
            <entry key="type" value="master"/>
        </service-properties>
    </service>
    
    <bean id="configManager" class="org.apache.karaf.cellar.hazelcast.factory.HazelcastConfigurationManager">
        <cm:managed-properties persistent-id="org.apache.karaf.cellar.discovery" update-strategy="component-managed"
                               update-method="update"/>
        <property name="hzClassLoader" ref="bundleClassLoader"/>
        <property name="xmlConfig" value="${karaf.home}/etc/hazelcast.xml"/>
    </bean>
    
    <service ref="configManager" auto-export="interfaces"/>

    <bean id="nodeConfiguration" class="org.apache.karaf.cellar.hazelcast.internal.NodeConfigurationImpl">
        <cm:managed-properties persistent-id="org.apache.karaf.cellar.core.NodeConfiguration" update-strategy="container-managed"
                               update-method="updated"/>
        <property name="groups">
            <set>
                <value>default</value>
            </set>
        </property>
        <property name="producer" value="true"/>
        <property name="consumer" value="true"/>
        <property name="enabledEvents">
            <list>
                <value>org.apache.karaf.cellar.bundle.BundleEventHandler</value>
                <value>org.apache.karaf.cellar.config.ConfigurationEventHandler</value>
                <value>org.apache.karaf.cellar.features.FeaturesEventHandler</value>
                <value>org.apache.karaf.cellar.dosgi.RemoteServiceCallHandler</value>
                <value>org.apache.karaf.cellar.event.ClusterEventHandler</value>
                <value>org.apache.karaf.cellar.bundle.BundleEventHandler</value>
                <value>org.apache.karaf.cellar.obr.ObrBundleEventHandler</value>
                <value>org.apache.karaf.cellar.obr.ObrUrlEventHandler</value>
            </list>
        </property>
    </bean>

    <service ref="nodeConfiguration" auto-export="interfaces"/>

    <cm:managed-service-factory id="groupFactory" factory-pid="org.apache.karaf.cellar.core.GroupConfiguration"
                                auto-export="interfaces">
        <cm:managed-component class="org.apache.karaf.cellar.hazelcast.internal.GroupConfigurationImpl">
            <cm:managed-properties persistent-id="" update-strategy="container-managed" update-method="update"/>
            <property name="syncConfiguration" value="true"/>
            <property name="inboundConfigurationWhitelist">
                <list>
                    <value>*</value>
                </list>
            </property>
            <property name="outboundConfigurationWhitelist">
                <list>
                    <value>*</value>
                </list>
            </property>
            <property name="inboundConfigurationBlacklist">
                <list>
                    <value>org.apache.felix.fileinstall*</value>
                    <value>org.apache.karaf.cellar*</value>
                    <value>org.apache.karaf.management</value>
                    <value>org.apache.karaf.shell</value>
                    <value>org.ops4j.pax.logging</value>
                    <value>org.ops4j.pax.web</value>
                </list>
            </property>
            <property name="outboundConfigurationBlacklist">
                <list>
                    <value>org.apache.felix.fileinstall*</value>
                    <value>org.apache.karaf.cellar*</value>
                    <value>org.apache.karaf.management</value>
                    <value>org.apache.karaf.shell</value>
                    <value>org.ops4j.pax.logging</value>
                    <value>org.ops4j.pax.web</value>
                </list>
            </property>
            <property name="syncFeatures" value="true"/>
            <property name="syncFeatureRepos" value="true"/>
            <property name="inboundFeatureWhitelist">
                <list>
                    <value>*</value>
                </list>
            </property>
            <property name="outboundFeatureWhitelist">
                <list>
                    <value>*</value>
                </list>
            </property>
            <property name="inboundFeatureBlacklist">
                <list>
                    <value>config</value>
                    <value>management</value>
                    <value>hazelcast</value>
                    <value>cellar*</value>
                </list>
            </property>
            <property name="outboundFeatureBlacklist">
                <list>
                    <value>config</value>
                    <value>management</value>
                    <value>hazelcast</value>
                    <value>cellar*</value>
                </list>
            </property>
            <property name="syncBundles" value="true"/>
            <property name="inboundBundleWhitelist">
                <list>
                    <value>*</value>
                </list>
            </property>
            <property name="outboundBundleWhitelist">
                <list>
                    <value>*</value>
                </list>
            </property>
            <property name="inboundBundleBlacklist">
                <list>
                    <value>none</value>
                </list>
            </property>
            <property name="outboundBundleBlacklist">
                <list>
                    <value>none</value>
                </list>
            </property>
            <property name="syncOBRUrls" value="true"/>
            <property name="inboundOBRUrlsWhitelist">
                <list>
                    <value>*</value>
                </list>
            </property>
            <property name="outboundOBRUrlsWhitelist">
                <list>
                    <value>*</value>
                </list>
            </property>
            <property name="inboundOBRUrlsBlacklist">
                <list>
                    <value>none</value>
                </list>
            </property>
            <property name="outboundOBRUrlsBlacklist">
                <list>
                    <value>none</value>
                </list>
            </property>
            <property name="syncOBRBundles" value="true"/>
            <property name="masterCluster" ref="masterCluster"/>
            <property name="eventTransportFactory" ref="eventTransportFactory"/>
            <property name="bundleContext" ref="blueprintBundleContext"/>
        </cm:managed-component>
    </cm:managed-service-factory>

    <bean id="groupManager" class="org.apache.karaf.cellar.hazelcast.HazelcastGroupManager" init-method="init" destroy-method="destroy">
        <property name="masterCluster" ref="masterCluster"/>
        <property name="configurationAdmin" ref="configurationAdmin"/>
        <property name="nodeConfiguration" ref="nodeConfigRef"/>
    </bean>

    <service ref="groupManager" auto-export="interfaces"/>

    <!-- Cluster Manager -->
    <bean id="clusterManager" class="org.apache.karaf.cellar.hazelcast.HazelcastClusterManager" init-method="init" destroy-method="destroy">
        <property name="masterCluster" ref="masterCluster"/>
    </bean>

    <service ref="clusterManager" interface="org.apache.karaf.cellar.core.ClusterManager"/>
    
    <!-- Members Listener -->
    <bean id="membershipListener" class="org.apache.karaf.cellar.hazelcast.CellarMembershipListener" init-method="init">
        <property name="synchronizers" ref="synchronizers"/>
        <property name="groupManager" ref="groupManager"/>
        <property name="masterCluster" ref="masterCluster"/>
    </bean>
    
    <!-- Cluster Event Transport Factory -->
    <bean id="eventTransportFactory" class="org.apache.karaf.cellar.hazelcast.HazelcastEventTransportFactory">
        <property name="dispatcher"  ref="dispatcher"/>
        <property name="nodeConfiguration" ref="nodeConfiguration"/>
        <property name="masterCluster"  ref="masterCluster"/>
    </bean>
    
    <service ref="eventTransportFactory" interface="org.apache.karaf.cellar.core.event.EventTransportFactory"/>

    <!-- Cluster Event Consumer -->
    <bean id="consumer" class="org.apache.karaf.cellar.hazelcast.TopicConsumer" init-method="init"
          destroy-method="destroy">
        <property name="dispatcher" ref="dispatcher"/>
        <property name="masterCluster" ref="masterCluster"/>
        <property name="nodeConfiguration" ref="nodeConfiguration"/>
    </bean>

    <!-- Cluster Event Producer -->
    <bean id="eventProducer" class="org.apache.karaf.cellar.hazelcast.TopicProducer" init-method="init">
        <property name="masterCluster" ref="masterCluster"/>
        <property name="nodeConfiguration" ref="nodeConfiguration"/>
    </bean>
    
    <service ref="eventProducer" interface="org.apache.karaf.cellar.core.event.EventProducer"/>

    <!-- Execution Context -->
    <bean id="executionContext" class="org.apache.karaf.cellar.core.command.ClusteredExecutionContext">
        <property name="producer" ref="eventProducer"/>
        <property name="commandStore" ref="commandStore"/>
    </bean>
    
    <service ref="executionContext" interface="org.apache.karaf.cellar.core.command.ExecutionContext"/>

    <bean id="commandExecutionContext" class="org.apache.karaf.cellar.hazelcast.internal.CommandExecutionContextImpl"
          init-method="init" destroy-method="destroy">
        <property name="name" value="commandExecution"/>
        <property name="cluster" ref="masterCluster"/>
    </bean>

    <service ref="commandExecutionContext" interface="org.apache.karaf.cellar.core.command.CommandExecutionContext"/>
    
    <bean id="cellarSupport" class="org.apache.karaf.cellar.core.CellarSupport"/>
    
    <!-- Handler For Cluster Producer Switch Command Event -->
    <bean id="producerSwitchCommandHandler" class="org.apache.karaf.cellar.core.control.ProducerSwitchCommandHandler">
        <property name="producer" ref="eventProducer"/>
        <property name="configurationAdmin" ref="configurationAdmin"/>
    </bean>
    
    <service ref="producerSwitchCommandHandler" interface="org.apache.karaf.cellar.core.event.EventHandler"/>
    
    <!-- Handler For Cluster Producer Switch Result Event -->
    <bean id="producerSwitchResultHandler" class="org.apache.karaf.cellar.core.control.ProducerSwitchResultHandler">
        <property name="commandStore" ref="commandStore"/>
    </bean>
    
    <service ref="producerSwitchResultHandler" interface="org.apache.karaf.cellar.core.event.EventHandler"/>

    <!-- Handler For Cluster Consumer Switch Command Event -->
    <bean id="consumerSwitchCommandHandler" class="org.apache.karaf.cellar.core.control.ConsumerSwitchCommandHandler">
        <property name="producer" ref="eventProducer"/>
        <property name="consumer" ref="consumer"/>
    </bean>
    
    <service ref="consumerSwitchCommandHandler" interface="org.apache.karaf.cellar.core.event.EventHandler"/>

    <!-- Handler For Cluster Consumer Switch Result Event -->
    <bean id="consumerSwitchResultHandler" class="org.apache.karaf.cellar.core.control.ConsumerSwitchResultHandler">
        <property name="commandStore" ref="commandStore"/>
    </bean>

    <service ref="consumerSwitchResultHandler" interface="org.apache.karaf.cellar.core.event.EventHandler"/>

    <!-- Handler For Cluster Manage Handlers Command Event -->
    <bean id="manageHandlersCommandHandler" class="org.apache.karaf.cellar.core.control.ManageHandlersCommandHandler">
        <property name="producer" ref="eventProducer"/>
        <property name="configurationAdmin" ref="configurationAdmin"/>
    </bean>

    <service ref="manageHandlersCommandHandler" interface="org.apache.karaf.cellar.core.event.EventHandler"/>

    <!-- Handler For Cluster Manage Handlers Result Event -->
    <bean id="manageHandlersResultHandler" class="org.apache.karaf.cellar.core.control.ManageHandlersResultHandler">
        <property name="commandStore" ref="commandStore"/>
    </bean>

    <service ref="manageHandlersResultHandler" interface="org.apache.karaf.cellar.core.event.EventHandler"/>

    <!-- Handler For Cluster Manager Group Command Event -->
    <bean id="manageGroupCommandHandler" class="org.apache.karaf.cellar.core.control.ManageGroupCommandHandler" init-method="init">
        <property name="masterCluster" ref="masterCluster"/>
        <property name="groupManager" ref="groupManager"/>
        <property name="configurationAdmin" ref="configurationAdmin"/>
    </bean>

    <service ref="manageGroupCommandHandler" interface="org.apache.karaf.cellar.core.event.EventHandler"/>

    <!-- Handlers For Cluster Manager Group Result Event -->
    <bean id="manageGroupResultHandler" class="org.apache.karaf.cellar.core.control.ManageGroupResultHandler">
        <property name="commandStore" ref="commandStore"/>
    </bean>

    <service ref="manageGroupResultHandler" interface="org.apache.karaf.cellar.core.event.EventHandler"/>

    <!-- Command Store -->
    <bean id="commandStore" class="org.apache.karaf.cellar.core.command.BasicCommandStore"/>

    <service ref="commandStore" interface="org.apache.karaf.cellar.core.command.CommandStore"/>

    <!-- Cluster Event Dispatcher -->
    <bean id="dispatcher" class="org.apache.karaf.cellar.core.event.EventHandlerRegistryDispatcher" init-method="init">
        <property name="handlerRegistry" ref="registry"/>
    </bean>

    <reference id="registry" interface="org.apache.karaf.cellar.core.event.EventHandlerRegistry"/>
    <reference id="configurationAdmin" interface="org.osgi.service.cm.ConfigurationAdmin"/>

    <reference id="nodeConfigRef" interface="org.apache.karaf.cellar.core.NodeConfiguration" availability="optional">
        <reference-listener ref="groupManager" bind-method="nodeMembershipsReceived" unbind-method="nodeMembershipsRemoved"/>
    </reference>

    <reference-list id="groupMemberships" availability="optional" interface="org.apache.karaf.cellar.core.GroupConfiguration" member-type="service-object">
        <reference-listener ref="groupManager" bind-method="groupConfigured" unbind-method="groupRemoved"/>
    </reference-list>

    <reference-list id="discoveryServices" availability="optional" interface="org.apache.karaf.cellar.core.discovery.DiscoveryService"/>
    <reference-list id="groupEventProducers" availability="optional" interface="org.apache.karaf.cellar.core.event.EventProducer"
                    filter="(type = group)"/>
    <reference-list id="groupEventConsumers" availability="optional" interface="org.apache.karaf.cellar.core.event.EventConsumer"
                    filter="(type = group)"/>
    <reference-list id="synchronizers" availability="optional" interface="org.apache.karaf.cellar.core.Synchronizer"/>

</blueprint>
