h1. Cellar nodes

This chapter describes the Cellar nodes manipulation commands.

h2. Nodes identification

When you installed the Cellar feature, your Karaf instance became automatically a Cellar cluster node,
and hence tries to discover the others Cellar nodes.

You can list the known Cellar nodes using the list-nodes command:

{code}
karaf@root> cluster:list-nodes
   No. Host Name             Port ID
*    1 node1.local       5701 node1.local:5701
     2 node2.local       5702 node2.local:5702
{code}

The starting * indicates that it's the Karaf instance on which you are logged on (the local node).

h2. Testing nodes

You can ping a node to test it:

{code}
karaf@root> cluster:ping node2.local:5702
Pinging node :node2.local:5702
PING 1 node2.local:5702 82ms
PING 2 node2.local:5702 11ms
PING 3 node2.local:5702 14ms
{code}

h2. Nodes sync

Cellar allows nodes to 'sync' state. It currently covers features, configs, and bundles.

For instance, if you install a feature (eventadmin for example) on node1:

{code}
karaf@node1> feature:install eventadmin
karaf@node1> feature:list|grep -i eventadmin
[installed  ] [3.0.0-SNAPSHOT ] eventadmin                    karaf-3.0.0-SNAPSHOT
{code}

You can see that the eventadmin feature has been installed on node2:

{code}
karaf@node2> feature:list|grep -i eventadmin
[installed  ] [3.0.0-SNAPSHOT ] eventadmin                    karaf-3.0.0-SNAPSHOT
{code}

Features uninstall works in the same way. Basically, Cellar synchronisation is completely transparent.

Configuration is also synchronized.
